<Window x:Class="HuntMmrReader.Views.MainWindow"
        x:Name="Main"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:emoji="clr-namespace:Emoji.Wpf;assembly=Emoji.Wpf"
        xmlns:enums="clr-namespace:HuntMmrReader.Enums"
        xmlns:viewAddons="clr-namespace:HuntMmrReader.ViewAddons"
        xmlns:viewModels="clr-namespace:HuntMmrReader.ViewModels"
        xmlns:converters="clr-namespace:HuntMmrReader.Converters"
        xmlns:models="clr-namespace:HuntMmrReader.Models"
        xmlns:system="clr-namespace:System;assembly=System.Runtime"
        mc:Ignorable="d"
        Height="500" Width="1000"
        Title="{Binding Title, Mode=OneWay}">
    <Window.DataContext>
        <viewModels:MainWindowViewModel />
    </Window.DataContext>
    <Window.Resources>
        <converters:BooleanToEmoticonConverter x:Key="BooleanToEmoticonConverter" />
        <converters:IsEqualOrGreaterThanUshortVisibilityConverter x:Key="IsEqualOrGreaterThanUshortVisibilityConverter" />
        <converters:IntToCowboyConverter x:Key="IntToCowboyConverter" />
        <converters:MmrToColorConverter x:Key="MmrToColorConverter" />
        <converters:MmrToMmrRangeString x:Key="MmrToMmrRangeString" />
        <converters:MmrToPrognosisStringConverter x:Key="MmrToPrognosisStringConverter" />
        <converters:PlayerOptionsToBooleanConverter x:Key="PlayerOptionsToBooleanConverter" />
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <CollectionViewSource x:Key="GroupedTeams" Source="{Binding Teams}">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Id" />
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="F5" Command="{Binding ReadFileCommand}" CommandParameter="{Binding FilePath}" />
    </Window.InputBindings>
    <behaviors:Interaction.Triggers>
        <behaviors:EventTrigger EventName="Closing">
            <behaviors:InvokeCommandAction Command="{Binding CloseEventCommand}" />
        </behaviors:EventTrigger>
    </behaviors:Interaction.Triggers>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="2*" />
            <RowDefinition Height="8*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <Menu Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
            <MenuItem Header="_File">
                <MenuItem Header="_Reload" Command="{Binding ReadFileCommand}" CommandParameter="{Binding FilePath}" />
                <Separator />
                <MenuItem Header="_Exit" Command="{Binding CloseWindowCommand, Mode=OneWay}"
                          CommandParameter="{Binding ElementName=Main}" />
            </MenuItem>
            <MenuItem Header="_Settings">
                <MenuItem Header="_Edit Path..." Command="{Binding GetFilePathCommand}" />
                <Separator />
                <MenuItem Header="_Name" x:Name="BloodLineNameOption" Command="{Binding SetUnsetDisplayOptionsCommand}"
                          CommandParameter="{x:Static enums:PlayerOptions.BloodLineName}" StaysOpenOnClick="True"
                          IsChecked="{Binding DisplayOptions, Converter={StaticResource PlayerOptionsToBooleanConverter}, ConverterParameter={x:Static enums:PlayerOptions.BloodLineName}, Mode=OneWay}" />
                <MenuItem Header="_MMR" x:Name="MmrOption" Command="{Binding SetUnsetDisplayOptionsCommand}"
                          CommandParameter="{x:Static enums:PlayerOptions.Mmr}" StaysOpenOnClick="True"
                          IsChecked="{Binding DisplayOptions, Converter={StaticResource PlayerOptionsToBooleanConverter}, ConverterParameter={x:Static enums:PlayerOptions.Mmr}, Mode=OneWay}" />
                <MenuItem Header="_Overall Killed By Me" x:Name="OverallKilledByMeOption" FontStyle="Italic"
                          Command="{Binding SetUnsetDisplayOptionsCommand}"
                          CommandParameter="{x:Static enums:PlayerOptions.OverallKilledByMe}" StaysOpenOnClick="True"
                          IsChecked="{Binding DisplayOptions, Converter={StaticResource PlayerOptionsToBooleanConverter}, ConverterParameter={x:Static enums:PlayerOptions.OverallKilledByMe}, Mode=OneWay}" />
                <MenuItem Header="_Overall Killed By Teammate" x:Name="OverallKilledByTeammateOption"
                          FontStyle="Italic"
                          Command="{Binding SetUnsetDisplayOptionsCommand}"
                          CommandParameter="{x:Static enums:PlayerOptions.OverallKilledByTeammate}"
                          StaysOpenOnClick="True"
                          IsChecked="{Binding DisplayOptions, Converter={StaticResource PlayerOptionsToBooleanConverter}, ConverterParameter={x:Static enums:PlayerOptions.OverallKilledByTeammate}, Mode=OneWay}" />
                <MenuItem Header="_Overall Killed Me" x:Name="OverallKilledMeOption" FontStyle="Italic"
                          Command="{Binding SetUnsetDisplayOptionsCommand}"
                          CommandParameter="{x:Static enums:PlayerOptions.OverallKilledMe}" StaysOpenOnClick="True"
                          IsChecked="{Binding DisplayOptions, Converter={StaticResource PlayerOptionsToBooleanConverter}, ConverterParameter={x:Static enums:PlayerOptions.OverallKilledMe}, Mode=OneWay}" />
                <MenuItem Header="_Overall Killed Teammate" x:Name="OverallKilledTeammateOption" FontStyle="Italic"
                          Command="{Binding SetUnsetDisplayOptionsCommand}"
                          CommandParameter="{x:Static enums:PlayerOptions.OverallKilledTeammate}"
                          StaysOpenOnClick="True"
                          IsChecked="{Binding DisplayOptions, Converter={StaticResource PlayerOptionsToBooleanConverter}, ConverterParameter={x:Static enums:PlayerOptions.OverallKilledTeammate}, Mode=OneWay}" />
                <MenuItem Header="_Bounty Extracted" x:Name="BountyExtractedOption"
                          Command="{Binding SetUnsetDisplayOptionsCommand}"
                          CommandParameter="{x:Static enums:PlayerOptions.BountyExtracted}" StaysOpenOnClick="True"
                          IsChecked="{Binding DisplayOptions, Converter={StaticResource PlayerOptionsToBooleanConverter}, ConverterParameter={x:Static enums:PlayerOptions.BountyExtracted}, Mode=OneWay}" />
                <MenuItem Header="_Bounty Picked Up" x:Name="BountyPickedUpOption"
                          Command="{Binding SetUnsetDisplayOptionsCommand}"
                          CommandParameter="{x:Static enums:PlayerOptions.BountyPickedUp}" StaysOpenOnClick="True"
                          IsChecked="{Binding DisplayOptions, Converter={StaticResource PlayerOptionsToBooleanConverter}, ConverterParameter={x:Static enums:PlayerOptions.BountyPickedUp}, Mode=OneWay}" />
                <MenuItem Header="_Had Bounty" x:Name="HadBountyOption"
                          Command="{Binding SetUnsetDisplayOptionsCommand}"
                          CommandParameter="{x:Static enums:PlayerOptions.HadBounty}" StaysOpenOnClick="True"
                          IsChecked="{Binding DisplayOptions, Converter={StaticResource PlayerOptionsToBooleanConverter}, ConverterParameter={x:Static enums:PlayerOptions.HadBounty}, Mode=OneWay}" />
                <MenuItem Header="_Had Wellspring" x:Name="HadWellspringOption"
                          Command="{Binding SetUnsetDisplayOptionsCommand}"
                          CommandParameter="{x:Static enums:PlayerOptions.HadWellspring}" StaysOpenOnClick="True"
                          IsChecked="{Binding DisplayOptions, Converter={StaticResource PlayerOptionsToBooleanConverter}, ConverterParameter={x:Static enums:PlayerOptions.HadWellspring}, Mode=OneWay}" />
                <MenuItem Header="_Downed by me X times" x:Name="DownedByMeOption"
                          Command="{Binding SetUnsetDisplayOptionsCommand}"
                          CommandParameter="{x:Static enums:PlayerOptions.DownedByMe}" StaysOpenOnClick="True"
                          IsChecked="{Binding DisplayOptions, Converter={StaticResource PlayerOptionsToBooleanConverter}, ConverterParameter={x:Static enums:PlayerOptions.DownedByMe}, Mode=OneWay}" />
                <MenuItem Header="_Downed by teammate X times" x:Name="DownedByTeammateOption"
                          Command="{Binding SetUnsetDisplayOptionsCommand}"
                          CommandParameter="{x:Static enums:PlayerOptions.DownedByTeammate}" StaysOpenOnClick="True"
                          IsChecked="{Binding DisplayOptions, Converter={StaticResource PlayerOptionsToBooleanConverter}, ConverterParameter={x:Static enums:PlayerOptions.DownedByTeammate}, Mode=OneWay}" />
                <MenuItem Header="_Downed me X times" x:Name="DownedMeOption"
                          Command="{Binding SetUnsetDisplayOptionsCommand}"
                          CommandParameter="{x:Static enums:PlayerOptions.DownedMe}" StaysOpenOnClick="True"
                          IsChecked="{Binding DisplayOptions, Converter={StaticResource PlayerOptionsToBooleanConverter}, ConverterParameter={x:Static enums:PlayerOptions.DownedMe}, Mode=OneWay}" />
                <MenuItem Header="_Downed teammate X times" x:Name="DownedTeammateOption"
                          Command="{Binding SetUnsetDisplayOptionsCommand}"
                          CommandParameter="{x:Static enums:PlayerOptions.DownedTeammate}" StaysOpenOnClick="True"
                          IsChecked="{Binding DisplayOptions, Converter={StaticResource PlayerOptionsToBooleanConverter}, ConverterParameter={x:Static enums:PlayerOptions.DownedTeammate}, Mode=OneWay}" />
                <MenuItem Header="_Killed by me X times" x:Name="KilledByMeOption"
                          Command="{Binding SetUnsetDisplayOptionsCommand}"
                          CommandParameter="{x:Static enums:PlayerOptions.KilledByMe}" StaysOpenOnClick="True"
                          IsChecked="{Binding DisplayOptions, Converter={StaticResource PlayerOptionsToBooleanConverter}, ConverterParameter={x:Static enums:PlayerOptions.KilledByMe}, Mode=OneWay}" />
                <MenuItem Header="_Killed by teammate X times" x:Name="KilledByTeammateOption"
                          Command="{Binding SetUnsetDisplayOptionsCommand}"
                          CommandParameter="{x:Static enums:PlayerOptions.KilledByTeammate}" StaysOpenOnClick="True"
                          IsChecked="{Binding DisplayOptions, Converter={StaticResource PlayerOptionsToBooleanConverter}, ConverterParameter={x:Static enums:PlayerOptions.KilledByTeammate}, Mode=OneWay}" />
                <MenuItem Header="_Killed me X times" x:Name="KilledMeOption"
                          Command="{Binding SetUnsetDisplayOptionsCommand}"
                          CommandParameter="{x:Static enums:PlayerOptions.KilledMe}" StaysOpenOnClick="True"
                          IsChecked="{Binding DisplayOptions, Converter={StaticResource PlayerOptionsToBooleanConverter}, ConverterParameter={x:Static enums:PlayerOptions.KilledMe}, Mode=OneWay}" />
                <MenuItem Header="_Killed teammate X times" x:Name="KilledTeammateOption"
                          Command="{Binding SetUnsetDisplayOptionsCommand}"
                          CommandParameter="{x:Static enums:PlayerOptions.KilledTeammate}" StaysOpenOnClick="True"
                          IsChecked="{Binding DisplayOptions, Converter={StaticResource PlayerOptionsToBooleanConverter}, ConverterParameter={x:Static enums:PlayerOptions.KilledTeammate}, Mode=OneWay}" />
                <MenuItem Header="_Is Partner" x:Name="IsPartnerOption"
                          Command="{Binding SetUnsetDisplayOptionsCommand}"
                          CommandParameter="{x:Static enums:PlayerOptions.IsPartner}" StaysOpenOnClick="True"
                          IsChecked="{Binding DisplayOptions, Converter={StaticResource PlayerOptionsToBooleanConverter}, ConverterParameter={x:Static enums:PlayerOptions.IsPartner}, Mode=OneWay}" />
                <MenuItem Header="_Is Soul Survivor" x:Name="IsSoulSurvivorOption"
                          Command="{Binding SetUnsetDisplayOptionsCommand}"
                          CommandParameter="{x:Static enums:PlayerOptions.IsSoulSurvivor}" StaysOpenOnClick="True"
                          IsChecked="{Binding DisplayOptions, Converter={StaticResource PlayerOptionsToBooleanConverter}, ConverterParameter={x:Static enums:PlayerOptions.IsSoulSurvivor}, Mode=OneWay}" />
                <MenuItem Header="_Proximity" x:Name="ProximityOption"
                          Command="{Binding SetUnsetDisplayOptionsCommand}"
                          CommandParameter="{x:Static enums:PlayerOptions.Proximity}" StaysOpenOnClick="True"
                          IsChecked="{Binding DisplayOptions, Converter={StaticResource PlayerOptionsToBooleanConverter}, ConverterParameter={x:Static enums:PlayerOptions.Proximity}, Mode=OneWay}" />
                <MenuItem Header="_Proximity To Me" x:Name="ProximityToMeOption"
                          Command="{Binding SetUnsetDisplayOptionsCommand}"
                          CommandParameter="{x:Static enums:PlayerOptions.ProximityToMe}" StaysOpenOnClick="True"
                          IsChecked="{Binding DisplayOptions, Converter={StaticResource PlayerOptionsToBooleanConverter}, ConverterParameter={x:Static enums:PlayerOptions.ProximityToMe}, Mode=OneWay}" />
                <MenuItem Header="_Proximity To Teammate" x:Name="ProximityToTeammateOption"
                          Command="{Binding SetUnsetDisplayOptionsCommand}"
                          CommandParameter="{x:Static enums:PlayerOptions.ProximityToTeammate}" StaysOpenOnClick="True"
                          IsChecked="{Binding DisplayOptions, Converter={StaticResource PlayerOptionsToBooleanConverter}, ConverterParameter={x:Static enums:PlayerOptions.ProximityToTeammate}, Mode=OneWay}" />
                <MenuItem Header="_Skill-based Matchmaking" x:Name="SkillBasedOption"
                          Command="{Binding SetUnsetDisplayOptionsCommand}"
                          CommandParameter="{x:Static enums:PlayerOptions.SkillBased}" StaysOpenOnClick="True"
                          IsChecked="{Binding DisplayOptions, Converter={StaticResource PlayerOptionsToBooleanConverter}, ConverterParameter={x:Static enums:PlayerOptions.SkillBased}, Mode=OneWay}" />
                <MenuItem Header="_Team Extraction" x:Name="TeamExtractionOption"
                          Command="{Binding SetUnsetDisplayOptionsCommand}"
                          CommandParameter="{x:Static enums:PlayerOptions.TeamExtraction}" StaysOpenOnClick="True"
                          IsChecked="{Binding DisplayOptions, Converter={StaticResource PlayerOptionsToBooleanConverter}, ConverterParameter={x:Static enums:PlayerOptions.TeamExtraction}, Mode=OneWay}" />
                <MenuItem Header="_Profile ID" x:Name="ProfileIdOption"
                          Command="{Binding SetUnsetDisplayOptionsCommand}"
                          CommandParameter="{x:Static enums:PlayerOptions.ProfileId}" StaysOpenOnClick="True"
                          IsChecked="{Binding DisplayOptions, Converter={StaticResource PlayerOptionsToBooleanConverter}, ConverterParameter={x:Static enums:PlayerOptions.ProfileId}, Mode=OneWay}" />
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem Header="_About" Command="{Binding AboutCommand}"
                          CommandParameter="{Binding ElementName=Main}" />
            </MenuItem>
        </Menu>
        <TextBlock Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">
            <TextBlock.Text>
                <MultiBinding StringFormat="{}Path: {0}">
                    <Binding Path="FilePath" Mode="OneWay" />
                </MultiBinding>
            </TextBlock.Text>
            <TextBlock.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="_Open Folder" Command="{Binding OpenFolderCommand}"
                              CommandParameter="{Binding FilePath}" />
                </ContextMenu>
            </TextBlock.ContextMenu>
        </TextBlock>
        <DataGrid ItemsSource="{Binding Exceptions}" AutoGenerateColumns="False"
                  CanUserAddRows="False" CanUserDeleteRows="False" Grid.Row="2" Grid.Column="0" IsReadOnly="True"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                  ScrollViewer.CanContentScroll="False" SelectedItem="{Binding SelectedDisplayException, Mode=TwoWay}">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Time" Binding="{Binding CreationTime}" Width="Auto" Foreground="Red" />
                <DataGridTextColumn Header="Exception" Binding="{Binding BaseException}" Width="Auto" Foreground="Red" />
                <DataGridTextColumn Header="Message" Binding="{Binding Message}" Width="*" Foreground="Red" />
            </DataGrid.Columns>
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="_Copy Stack trace to clipboard" Command="{Binding ClipboardCopyCommand}"
                              CommandParameter="{Binding SelectedDisplayException.StackTrace}" />
                </ContextMenu>
            </DataGrid.ContextMenu>
        </DataGrid>
        <Button Command="{Binding ClearErrorsCommand}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                Grid.Row="2" Grid.Column="1">
            <emoji:TextBlock Margin="5" Text="Clear Errors 🗑" />
        </Button>
        <DataGrid ItemsSource="{Binding Source={StaticResource GroupedTeams}}" AutoGenerateColumns="False"
                  CanUserAddRows="False" CanUserDeleteRows="False" Grid.Row="3" Grid.Column="0"
                  Grid.ColumnSpan="2" IsReadOnly="True" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                  ScrollViewer.CanContentScroll="False" HeadersVisibility="None">
            <DataGrid.GroupStyle>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <Expander IsExpanded="True"
                                                  d:DataContext="{d:DesignInstance CollectionViewGroup}">
                                            <Expander.Header>
                                                <emoji:TextBlock>
                                                    <emoji:TextBlock.Text>
                                                        <MultiBinding
                                                            StringFormat="{}Team: {0,2} | {1,3} | Random Team: {2} | MMR: {3,4} | Skill-based Matchmaking: {4}">
                                                            <Binding Path="Items[0].(models:HuntTeam.Id)" />
                                                            <Binding
                                                                Path="Items[0].(models:HuntTeam.TeamSize)"
                                                                Converter="{StaticResource IntToCowboyConverter}" />
                                                            <Binding
                                                                Path="Items[0].(models:HuntTeam.RandomTeam)"
                                                                Converter="{StaticResource BooleanToEmoticonConverter}" />
                                                            <Binding Path="Items[0].(models:HuntTeam.Mmr)" />
                                                            <Binding
                                                                Path="Items[0].(models:HuntTeam.SkillBasedMatchMakingEnabled)"
                                                                Converter="{StaticResource BooleanToEmoticonConverter}" />
                                                        </MultiBinding>
                                                    </emoji:TextBlock.Text>
                                                </emoji:TextBlock>
                                            </Expander.Header>
                                            <Expander.Style>
                                                <Style TargetType="{x:Type Expander}">
                                                    <Style.Triggers>
                                                        <DataTrigger
                                                            Binding="{Binding Items[0].(models:HuntTeam.OwnTeam)}"
                                                            Value="True">
                                                            <Setter Property="Background" Value="#3F00FFFF" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Expander.Style>
                                            <Expander.Content>
                                                <ItemsPresenter />
                                            </Expander.Content>
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </DataGrid.GroupStyle>
            <DataGrid.Columns>
                <DataGridTemplateColumn Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="models:HuntTeam">
                            <DataGrid AutoGenerateColumns="False"
                                      CanUserAddRows="False" CanUserDeleteRows="False" IsReadOnly="True"
                                      ItemsSource="{Binding Members}"
                                      ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                      ScrollViewer.VerticalScrollBarVisibility="Disabled" HeadersVisibility="Column">
                                <behaviors:Interaction.Behaviors>
                                    <viewAddons:BubbleScrollEvent />
                                </behaviors:Interaction.Behaviors>
                                <DataGrid.Resources>
                                    <system:UInt16 x:Key="OneStarMinimumMmr">0</system:UInt16>
                                    <system:UInt16 x:Key="TwoStarMinimumMmr">2000</system:UInt16>
                                    <system:UInt16 x:Key="ThreeStarMinimumMmr">2300</system:UInt16>
                                    <system:UInt16 x:Key="FourStarMinimumMmr">2600</system:UInt16>
                                    <system:UInt16 x:Key="FiveStarMinimumMmr">2750</system:UInt16>
                                    <system:UInt16 x:Key="SixStarMinimumMmr">3000</system:UInt16>
                                </DataGrid.Resources>
                                <DataGrid.ColumnHeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}">
                                        <Setter Property="FontWeight" Value="Bold" />
                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    </Style>
                                </DataGrid.ColumnHeaderStyle>
                                <DataGrid.CellStyle>
                                    <Style TargetType="{x:Type DataGridCell}">
                                        <Setter Property="TextBlock.TextAlignment" Value="Center" />
                                    </Style>
                                </DataGrid.CellStyle>
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Name" Binding="{Binding BloodLineName}" Width="Auto"
                                                        Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference BloodLineNameOption}}" />
                                    <DataGridTemplateColumn Header="MMR" Width="Auto"
                                                            Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference MmrOption}}">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate DataType="models:HuntPlayer">
                                                <TextBlock Text="{Binding Mmr}"
                                                           Foreground="{Binding Mmr, Converter={StaticResource MmrToColorConverter}}"
                                                           HorizontalAlignment="Center">
                                                    <TextBlock.ToolTip>
                                                        <StackPanel>
                                                            <TextBlock
                                                                Text="{Binding Mmr, Converter={StaticResource MmrToMmrRangeString}}"
                                                                Margin="5" FontWeight="Bold" />
                                                            <TextBlock
                                                                Text="{Binding Mmr, Converter={StaticResource MmrToPrognosisStringConverter}}"
                                                                Margin="5"
                                                                Foreground="{Binding Mmr, Converter={StaticResource MmrToColorConverter}}" />
                                                        </StackPanel>
                                                    </TextBlock.ToolTip>
                                                </TextBlock>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn Header="Stars" Width="Auto"
                                                            Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference MmrOption}}">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate DataType="models:HuntPlayer">
                                                <StackPanel Orientation="Horizontal">
                                                    <Image Source="{StaticResource StarDrawingImage}"
                                                           Visibility="{Binding Mmr, Converter={StaticResource IsEqualOrGreaterThanUshortVisibilityConverter}, ConverterParameter={StaticResource OneStarMinimumMmr}}" />
                                                    <Image Source="{StaticResource StarDrawingImage}"
                                                           Visibility="{Binding Mmr, Converter={StaticResource IsEqualOrGreaterThanUshortVisibilityConverter}, ConverterParameter={StaticResource TwoStarMinimumMmr}}" />
                                                    <Image Source="{StaticResource StarDrawingImage}"
                                                           Visibility="{Binding Mmr, Converter={StaticResource IsEqualOrGreaterThanUshortVisibilityConverter}, ConverterParameter={StaticResource ThreeStarMinimumMmr}}" />
                                                    <Image Source="{StaticResource StarDrawingImage}"
                                                           Visibility="{Binding Mmr, Converter={StaticResource IsEqualOrGreaterThanUshortVisibilityConverter}, ConverterParameter={StaticResource FourStarMinimumMmr}}" />
                                                    <Image Source="{StaticResource StarDrawingImage}"
                                                           Visibility="{Binding Mmr, Converter={StaticResource IsEqualOrGreaterThanUshortVisibilityConverter}, ConverterParameter={StaticResource FiveStarMinimumMmr}}" />
                                                    <Image Source="{StaticResource StarDrawingImage}"
                                                           Visibility="{Binding Mmr, Converter={StaticResource IsEqualOrGreaterThanUshortVisibilityConverter}, ConverterParameter={StaticResource SixStarMinimumMmr}}" />
                                                </StackPanel>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn Header="Bounty Extracted" Binding="{Binding BountyExtracted}"
                                                        Width="Auto"
                                                        Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference BountyExtractedOption}}" />
                                    <DataGridTextColumn Header="Bounty Picked Up" Binding="{Binding BountyPickedUp}"
                                                        Width="Auto"
                                                        Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference BountyPickedUpOption}}" />
                                    <DataGridTemplateColumn Header="Had Bounty" Width="Auto"
                                                            Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference HadBountyOption}}">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate DataType="models:HuntPlayer">
                                                <emoji:TextBlock
                                                    Text="{Binding HadBounty, Converter={StaticResource BooleanToEmoticonConverter}}"
                                                    HorizontalAlignment="Center" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn Header="Had Wellspring" Width="Auto"
                                                            Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference HadWellspringOption}}">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate DataType="models:HuntPlayer">
                                                <emoji:TextBlock
                                                    Text="{Binding HadWellspring, Converter={StaticResource BooleanToEmoticonConverter}}"
                                                    HorizontalAlignment="Center" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn Header="Overall killed by me X times"
                                                        Binding="{Binding OverallKilledByMe}"
                                                        Width="Auto"
                                                        Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference OverallKilledByMeOption}}" />
                                    <DataGridTextColumn Header="Downed by me X times" Binding="{Binding DownedByMe}"
                                                        Width="Auto"
                                                        Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference DownedByMeOption}}" />
                                    <DataGridTextColumn Header="Overall killed by teammate X times"
                                                        Binding="{Binding OverallKilledByTeammate}"
                                                        Width="Auto"
                                                        Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference OverallKilledByTeammateOption}}" />
                                    <DataGridTextColumn Header="Downed by teammate X times"
                                                        Binding="{Binding DownedByTeammate}"
                                                        Width="Auto"
                                                        Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference DownedByTeammateOption}}" />
                                    <DataGridTextColumn Header="Overall killed me X times"
                                                        Binding="{Binding OverallKilledMe}"
                                                        Width="Auto"
                                                        Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference OverallKilledMeOption}}" />
                                    <DataGridTextColumn Header="Downed me X times" Binding="{Binding DownedMe}"
                                                        Width="Auto"
                                                        Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference DownedMeOption}}" />
                                    <DataGridTextColumn Header="Overall killed teammate X times"
                                                        Binding="{Binding OverallKilledTeammate}"
                                                        Width="Auto"
                                                        Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference OverallKilledTeammateOption}}" />
                                    <DataGridTextColumn Header="Downed teammate X times"
                                                        Binding="{Binding DownedTeammate}"
                                                        Width="Auto"
                                                        Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference DownedTeammateOption}}" />
                                    <DataGridTextColumn Header="Killed by me X times" Binding="{Binding KilledByMe}"
                                                        Width="Auto"
                                                        Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference KilledByMeOption}}" />
                                    <DataGridTextColumn Header="Killed by teammate X times"
                                                        Binding="{Binding KilledByTeammate}"
                                                        Width="Auto"
                                                        Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference KilledByTeammateOption}}" />
                                    <DataGridTextColumn Header="Killed me X times" Binding="{Binding KilledMe}"
                                                        Width="Auto"
                                                        Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference KilledMeOption}}" />
                                    <DataGridTextColumn Header="Killed teammate X times"
                                                        Binding="{Binding KilledTeammate}"
                                                        Width="Auto"
                                                        Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference KilledTeammateOption}}" />
                                    <DataGridTemplateColumn Header="Is Partner" Width="Auto"
                                                            Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference IsPartnerOption}}">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate DataType="models:HuntPlayer">
                                                <emoji:TextBlock
                                                    Text="{Binding IsPartner, Converter={StaticResource BooleanToEmoticonConverter}}"
                                                    HorizontalAlignment="Center" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn Header="Is Soul Survivor" Width="Auto"
                                                            Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference IsSoulSurvivorOption}}">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate DataType="models:HuntPlayer">
                                                <emoji:TextBlock
                                                    Text="{Binding IsSoulSurvivor, Converter={StaticResource BooleanToEmoticonConverter}}"
                                                    HorizontalAlignment="Center" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn Header="Proximity" Width="Auto"
                                                            Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference ProximityOption}}">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate DataType="models:HuntPlayer">
                                                <emoji:TextBlock
                                                    Text="{Binding Proximity, Converter={StaticResource BooleanToEmoticonConverter}}"
                                                    HorizontalAlignment="Center" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn Header="Proximity To Me" Width="Auto"
                                                            Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference ProximityToMeOption}}">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate DataType="models:HuntPlayer">
                                                <emoji:TextBlock
                                                    Text="{Binding ProximityToMe, Converter={StaticResource BooleanToEmoticonConverter}}"
                                                    HorizontalAlignment="Center" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn Header="Proximity To Teammate" Width="Auto"
                                                            Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference ProximityToTeammateOption}}">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate DataType="models:HuntPlayer">
                                                <emoji:TextBlock
                                                    Text="{Binding ProximityToTeammate, Converter={StaticResource BooleanToEmoticonConverter}}"
                                                    HorizontalAlignment="Center" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn Header="Skill-based Matchmaking" Width="Auto"
                                                            Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference SkillBasedOption}}">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate DataType="models:HuntPlayer">
                                                <emoji:TextBlock
                                                    Text="{Binding SkillBased, Converter={StaticResource BooleanToEmoticonConverter}}"
                                                    HorizontalAlignment="Center" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn Header="Team Extraction" Width="Auto"
                                                            Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference TeamExtractionOption}}">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate DataType="models:HuntPlayer">
                                                <emoji:TextBlock
                                                    Text="{Binding TeamExtraction, Converter={StaticResource BooleanToEmoticonConverter}}"
                                                    HorizontalAlignment="Center" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn Header="Profile ID" Binding="{Binding ProfileId}"
                                                        Width="Auto"
                                                        Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, Source={x:Reference ProfileIdOption}}" />
                                </DataGrid.Columns>
                            </DataGrid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Window>